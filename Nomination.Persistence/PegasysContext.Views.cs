//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(Nominations.Data.PegasysContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets5c80a921dbe8f79038349e95e739a9ab6573d23d845b6069d33865801a62ea8e))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySets5c80a921dbe8f79038349e95e739a9ab6573d23d845b6069d33865801a62ea8e : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "5c80a921dbe8f79038349e95e739a9ab6573d23d845b6069d33865801a62ea8e"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.tb_contract_point")
            {
                return GetView0();
            }

            if (extentName == "PegasysContext.tb_contract_point")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.tb_super_pool")
            {
                return GetView2();
            }

            if (extentName == "PegasysContext.tb_super_pool")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.tb_super_pool_detail")
            {
                return GetView4();
            }

            if (extentName == "PegasysContext.tb_super_pool_detail")
            {
                return GetView5();
            }

            if (extentName == "CodeFirstDatabase.tb_super_pool_history")
            {
                return GetView6();
            }

            if (extentName == "PegasysContext.tb_super_pool_history")
            {
                return GetView7();
            }

            if (extentName == "CodeFirstDatabase.tb_trades")
            {
                return GetView8();
            }

            if (extentName == "PegasysContext.tb_trades")
            {
                return GetView9();
            }

            if (extentName == "CodeFirstDatabase.tb_trans_factors")
            {
                return GetView10();
            }

            if (extentName == "PegasysContext.tb_trans_factors")
            {
                return GetView11();
            }

            if (extentName == "CodeFirstDatabase.tb_trans_type")
            {
                return GetView12();
            }

            if (extentName == "PegasysContext.tb_trans_type")
            {
                return GetView13();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tb_contract_point.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tb_contract_point
        [CodeFirstDatabaseSchema.tb_contract_point](T1.[tb_contract_point.contract_point_id], T1.[tb_contract_point.contract_id], T1.[tb_contract_point.point_id], T1.[tb_contract_point.start_dt], T1.[tb_contract_point.row_lst_upd_dttm], T1.[tb_contract_point.row_lst_upd_userid], T1.[tb_contract_point.end_dt])
    FROM (
        SELECT 
            T.contract_point_id AS [tb_contract_point.contract_point_id], 
            T.contract_id AS [tb_contract_point.contract_id], 
            T.point_id AS [tb_contract_point.point_id], 
            T.start_dt AS [tb_contract_point.start_dt], 
            T.row_lst_upd_dttm AS [tb_contract_point.row_lst_upd_dttm], 
            T.row_lst_upd_userid AS [tb_contract_point.row_lst_upd_userid], 
            T.end_dt AS [tb_contract_point.end_dt], 
            True AS _from0
        FROM PegasysContext.tb_contract_point AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for PegasysContext.tb_contract_point.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tb_contract_point
        [Nominations.Data.tb_contract_point](T1.[tb_contract_point.contract_point_id], T1.[tb_contract_point.contract_id], T1.[tb_contract_point.point_id], T1.[tb_contract_point.start_dt], T1.[tb_contract_point.row_lst_upd_dttm], T1.[tb_contract_point.row_lst_upd_userid], T1.[tb_contract_point.end_dt])
    FROM (
        SELECT 
            T.contract_point_id AS [tb_contract_point.contract_point_id], 
            T.contract_id AS [tb_contract_point.contract_id], 
            T.point_id AS [tb_contract_point.point_id], 
            T.start_dt AS [tb_contract_point.start_dt], 
            T.row_lst_upd_dttm AS [tb_contract_point.row_lst_upd_dttm], 
            T.row_lst_upd_userid AS [tb_contract_point.row_lst_upd_userid], 
            T.end_dt AS [tb_contract_point.end_dt], 
            True AS _from0
        FROM CodeFirstDatabase.tb_contract_point AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tb_super_pool.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tb_super_pool
        [CodeFirstDatabaseSchema.tb_super_pool](T1.[tb_super_pool.contract_id], T1.[tb_super_pool.min_bank_date], T1.[tb_super_pool.company_num], T1.[tb_super_pool.super_pool_id], T1.[tb_super_pool.row_cr_dttm], T1.[tb_super_pool.row_cr_userid], T1.[tb_super_pool.row_lst_upd_dttm], T1.[tb_super_pool.row_lst_upd_userid])
    FROM (
        SELECT 
            T.contract_id AS [tb_super_pool.contract_id], 
            T.min_bank_date AS [tb_super_pool.min_bank_date], 
            T.company_num AS [tb_super_pool.company_num], 
            T.super_pool_id AS [tb_super_pool.super_pool_id], 
            T.row_cr_dttm AS [tb_super_pool.row_cr_dttm], 
            T.row_cr_userid AS [tb_super_pool.row_cr_userid], 
            T.row_lst_upd_dttm AS [tb_super_pool.row_lst_upd_dttm], 
            T.row_lst_upd_userid AS [tb_super_pool.row_lst_upd_userid], 
            True AS _from0
        FROM PegasysContext.tb_super_pool AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for PegasysContext.tb_super_pool.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tb_super_pool
        [Nominations.Data.tb_super_pool](T1.[tb_super_pool.contract_id], T1.[tb_super_pool.min_bank_date], T1.[tb_super_pool.company_num], T1.[tb_super_pool.super_pool_id], T1.[tb_super_pool.row_cr_dttm], T1.[tb_super_pool.row_cr_userid], T1.[tb_super_pool.row_lst_upd_dttm], T1.[tb_super_pool.row_lst_upd_userid])
    FROM (
        SELECT 
            T.contract_id AS [tb_super_pool.contract_id], 
            T.min_bank_date AS [tb_super_pool.min_bank_date], 
            T.company_num AS [tb_super_pool.company_num], 
            T.super_pool_id AS [tb_super_pool.super_pool_id], 
            T.row_cr_dttm AS [tb_super_pool.row_cr_dttm], 
            T.row_cr_userid AS [tb_super_pool.row_cr_userid], 
            T.row_lst_upd_dttm AS [tb_super_pool.row_lst_upd_dttm], 
            T.row_lst_upd_userid AS [tb_super_pool.row_lst_upd_userid], 
            True AS _from0
        FROM CodeFirstDatabase.tb_super_pool AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tb_super_pool_detail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tb_super_pool_detail
        [CodeFirstDatabaseSchema.tb_super_pool_detail](T1.[tb_super_pool_detail.sp_detail_id], T1.[tb_super_pool_detail.sp_master_id], T1.[tb_super_pool_detail.contract_id], T1.[tb_super_pool_detail.status], T1.[tb_super_pool_detail.status_change_dt], T1.[tb_super_pool_detail.row_cr_dttm], T1.[tb_super_pool_detail.row_cr_userid], T1.[tb_super_pool_detail.row_lst_upd_dttm], T1.[tb_super_pool_detail.row_lst_upd_userid], T1.[tb_super_pool_detail.reject_reason])
    FROM (
        SELECT 
            T.sp_detail_id AS [tb_super_pool_detail.sp_detail_id], 
            T.sp_master_id AS [tb_super_pool_detail.sp_master_id], 
            T.contract_id AS [tb_super_pool_detail.contract_id], 
            T.status AS [tb_super_pool_detail.status], 
            T.status_change_dt AS [tb_super_pool_detail.status_change_dt], 
            T.row_cr_dttm AS [tb_super_pool_detail.row_cr_dttm], 
            T.row_cr_userid AS [tb_super_pool_detail.row_cr_userid], 
            T.row_lst_upd_dttm AS [tb_super_pool_detail.row_lst_upd_dttm], 
            T.row_lst_upd_userid AS [tb_super_pool_detail.row_lst_upd_userid], 
            T.reject_reason AS [tb_super_pool_detail.reject_reason], 
            True AS _from0
        FROM PegasysContext.tb_super_pool_detail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for PegasysContext.tb_super_pool_detail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tb_super_pool_detail
        [Nominations.Data.tb_super_pool_detail](T1.[tb_super_pool_detail.sp_detail_id], T1.[tb_super_pool_detail.sp_master_id], T1.[tb_super_pool_detail.contract_id], T1.[tb_super_pool_detail.status], T1.[tb_super_pool_detail.status_change_dt], T1.[tb_super_pool_detail.row_cr_dttm], T1.[tb_super_pool_detail.row_cr_userid], T1.[tb_super_pool_detail.row_lst_upd_dttm], T1.[tb_super_pool_detail.row_lst_upd_userid], T1.[tb_super_pool_detail.reject_reason])
    FROM (
        SELECT 
            T.sp_detail_id AS [tb_super_pool_detail.sp_detail_id], 
            T.sp_master_id AS [tb_super_pool_detail.sp_master_id], 
            T.contract_id AS [tb_super_pool_detail.contract_id], 
            T.status AS [tb_super_pool_detail.status], 
            T.status_change_dt AS [tb_super_pool_detail.status_change_dt], 
            T.row_cr_dttm AS [tb_super_pool_detail.row_cr_dttm], 
            T.row_cr_userid AS [tb_super_pool_detail.row_cr_userid], 
            T.row_lst_upd_dttm AS [tb_super_pool_detail.row_lst_upd_dttm], 
            T.row_lst_upd_userid AS [tb_super_pool_detail.row_lst_upd_userid], 
            T.reject_reason AS [tb_super_pool_detail.reject_reason], 
            True AS _from0
        FROM CodeFirstDatabase.tb_super_pool_detail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tb_super_pool_history.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tb_super_pool_history
        [CodeFirstDatabaseSchema.tb_super_pool_history](T1.[tb_super_pool_history.sp_history_id], T1.[tb_super_pool_history.sp_detail_id], T1.[tb_super_pool_history.selected], T1.[tb_super_pool_history.status_change_dt], T1.[tb_super_pool_history.row_lst_upd_userid])
    FROM (
        SELECT 
            T.sp_history_id AS [tb_super_pool_history.sp_history_id], 
            T.sp_detail_id AS [tb_super_pool_history.sp_detail_id], 
            T.selected AS [tb_super_pool_history.selected], 
            T.status_change_dt AS [tb_super_pool_history.status_change_dt], 
            T.row_lst_upd_userid AS [tb_super_pool_history.row_lst_upd_userid], 
            True AS _from0
        FROM PegasysContext.tb_super_pool_history AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for PegasysContext.tb_super_pool_history.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tb_super_pool_history
        [Nominations.Data.tb_super_pool_history](T1.[tb_super_pool_history.sp_history_id], T1.[tb_super_pool_history.sp_detail_id], T1.[tb_super_pool_history.selected], T1.[tb_super_pool_history.status_change_dt], T1.[tb_super_pool_history.row_lst_upd_userid])
    FROM (
        SELECT 
            T.sp_history_id AS [tb_super_pool_history.sp_history_id], 
            T.sp_detail_id AS [tb_super_pool_history.sp_detail_id], 
            T.selected AS [tb_super_pool_history.selected], 
            T.status_change_dt AS [tb_super_pool_history.status_change_dt], 
            T.row_lst_upd_userid AS [tb_super_pool_history.row_lst_upd_userid], 
            True AS _from0
        FROM CodeFirstDatabase.tb_super_pool_history AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tb_trades.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tb_trades
        [CodeFirstDatabaseSchema.tb_trades](T1.[tb_trades.trade_id], T1.[tb_trades.bill_year], T1.[tb_trades.bill_month], T1.[tb_trades.company_code], T1.[tb_trades.request_dt], T1.[tb_trades.therms], T1.[tb_trades.buy_le_id], T1.[tb_trades.sell_le_id], T1.[tb_trades.status], T1.[tb_trades.initiator], T1.[tb_trades.row_cr_dttm], T1.[tb_trades.row_cr_userid], T1.[tb_trades.row_lst_upd_dttm], T1.[tb_trades.row_lst_upd_userid], T1.[tb_trades.confirm_dt], T1.[tb_trades.buy_contract_id], T1.[tb_trades.buy_userid], T1.[tb_trades.sell_contract_id], T1.[tb_trades.sell_userid], T1.[tb_trades.trade_procesd_code], T1.[tb_trades.reason_id])
    FROM (
        SELECT 
            T.trade_id AS [tb_trades.trade_id], 
            T.bill_year AS [tb_trades.bill_year], 
            T.bill_month AS [tb_trades.bill_month], 
            T.company_code AS [tb_trades.company_code], 
            T.request_dt AS [tb_trades.request_dt], 
            T.therms AS [tb_trades.therms], 
            T.buy_le_id AS [tb_trades.buy_le_id], 
            T.sell_le_id AS [tb_trades.sell_le_id], 
            T.status AS [tb_trades.status], 
            T.initiator AS [tb_trades.initiator], 
            T.row_cr_dttm AS [tb_trades.row_cr_dttm], 
            T.row_cr_userid AS [tb_trades.row_cr_userid], 
            T.row_lst_upd_dttm AS [tb_trades.row_lst_upd_dttm], 
            T.row_lst_upd_userid AS [tb_trades.row_lst_upd_userid], 
            T.confirm_dt AS [tb_trades.confirm_dt], 
            T.buy_contract_id AS [tb_trades.buy_contract_id], 
            T.buy_userid AS [tb_trades.buy_userid], 
            T.sell_contract_id AS [tb_trades.sell_contract_id], 
            T.sell_userid AS [tb_trades.sell_userid], 
            T.trade_procesd_code AS [tb_trades.trade_procesd_code], 
            T.reason_id AS [tb_trades.reason_id], 
            True AS _from0
        FROM PegasysContext.tb_trades AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for PegasysContext.tb_trades.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tb_trades
        [Nominations.Data.tb_trades](T1.[tb_trades.trade_id], T1.[tb_trades.bill_year], T1.[tb_trades.bill_month], T1.[tb_trades.company_code], T1.[tb_trades.request_dt], T1.[tb_trades.therms], T1.[tb_trades.buy_le_id], T1.[tb_trades.sell_le_id], T1.[tb_trades.status], T1.[tb_trades.initiator], T1.[tb_trades.row_cr_dttm], T1.[tb_trades.row_cr_userid], T1.[tb_trades.row_lst_upd_dttm], T1.[tb_trades.row_lst_upd_userid], T1.[tb_trades.confirm_dt], T1.[tb_trades.buy_contract_id], T1.[tb_trades.buy_userid], T1.[tb_trades.sell_contract_id], T1.[tb_trades.sell_userid], T1.[tb_trades.trade_procesd_code], T1.[tb_trades.reason_id])
    FROM (
        SELECT 
            T.trade_id AS [tb_trades.trade_id], 
            T.bill_year AS [tb_trades.bill_year], 
            T.bill_month AS [tb_trades.bill_month], 
            T.company_code AS [tb_trades.company_code], 
            T.request_dt AS [tb_trades.request_dt], 
            T.therms AS [tb_trades.therms], 
            T.buy_le_id AS [tb_trades.buy_le_id], 
            T.sell_le_id AS [tb_trades.sell_le_id], 
            T.status AS [tb_trades.status], 
            T.initiator AS [tb_trades.initiator], 
            T.row_cr_dttm AS [tb_trades.row_cr_dttm], 
            T.row_cr_userid AS [tb_trades.row_cr_userid], 
            T.row_lst_upd_dttm AS [tb_trades.row_lst_upd_dttm], 
            T.row_lst_upd_userid AS [tb_trades.row_lst_upd_userid], 
            T.confirm_dt AS [tb_trades.confirm_dt], 
            T.buy_contract_id AS [tb_trades.buy_contract_id], 
            T.buy_userid AS [tb_trades.buy_userid], 
            T.sell_contract_id AS [tb_trades.sell_contract_id], 
            T.sell_userid AS [tb_trades.sell_userid], 
            T.trade_procesd_code AS [tb_trades.trade_procesd_code], 
            T.reason_id AS [tb_trades.reason_id], 
            True AS _from0
        FROM CodeFirstDatabase.tb_trades AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tb_trans_factors.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tb_trans_factors
        [CodeFirstDatabaseSchema.tb_trans_factors](T1.[tb_trans_factors.contract_id], T1.[tb_trans_factors.effective_dt], T1.[tb_trans_factors.bill_recn_ind], T1.[tb_trans_factors.transitional_ind], T1.[tb_trans_factors.max_daily_qty], T1.[tb_trans_factors.nomination_cap], T1.[tb_trans_factors.standby_percentage], T1.[tb_trans_factors.standby_qty], T1.[tb_trans_factors.allowable_bank], T1.[tb_trans_factors.crit_day_bal_qty], T1.[tb_trans_factors.non_crit_day_bal_qty], T1.[tb_trans_factors.daily_storage_qty], T1.[tb_trans_factors.annual_ctr_qty], T1.[tb_trans_factors.lv_bal_svc_qty], T1.[tb_trans_factors.auth_tol_lvl], T1.[tb_trans_factors.max_daily_nom], T1.[tb_trans_factors.avg_daily_use], T1.[tb_trans_factors.daily_bal_qty], T1.[tb_trans_factors.days_of_bank], T1.[tb_trans_factors.balancing_qty], T1.[tb_trans_factors.row_lst_upd_dttm], T1.[tb_trans_factors.row_lst_upd_userid], T1.[tb_trans_factors.max_daily_nom_adj], T1.[tb_trans_factors.max_daily_qty_adj], T1.[tb_trans_factors.allowable_bank_adj], T1.[tb_trans_factors.auth_tol_lvl_adj])
    FROM (
        SELECT 
            T.contract_id AS [tb_trans_factors.contract_id], 
            T.effective_dt AS [tb_trans_factors.effective_dt], 
            T.bill_recn_ind AS [tb_trans_factors.bill_recn_ind], 
            T.transitional_ind AS [tb_trans_factors.transitional_ind], 
            T.max_daily_qty AS [tb_trans_factors.max_daily_qty], 
            T.nomination_cap AS [tb_trans_factors.nomination_cap], 
            T.standby_percentage AS [tb_trans_factors.standby_percentage], 
            T.standby_qty AS [tb_trans_factors.standby_qty], 
            T.allowable_bank AS [tb_trans_factors.allowable_bank], 
            T.crit_day_bal_qty AS [tb_trans_factors.crit_day_bal_qty], 
            T.non_crit_day_bal_qty AS [tb_trans_factors.non_crit_day_bal_qty], 
            T.daily_storage_qty AS [tb_trans_factors.daily_storage_qty], 
            T.annual_ctr_qty AS [tb_trans_factors.annual_ctr_qty], 
            T.lv_bal_svc_qty AS [tb_trans_factors.lv_bal_svc_qty], 
            T.auth_tol_lvl AS [tb_trans_factors.auth_tol_lvl], 
            T.max_daily_nom AS [tb_trans_factors.max_daily_nom], 
            T.avg_daily_use AS [tb_trans_factors.avg_daily_use], 
            T.daily_bal_qty AS [tb_trans_factors.daily_bal_qty], 
            T.days_of_bank AS [tb_trans_factors.days_of_bank], 
            T.balancing_qty AS [tb_trans_factors.balancing_qty], 
            T.row_lst_upd_dttm AS [tb_trans_factors.row_lst_upd_dttm], 
            T.row_lst_upd_userid AS [tb_trans_factors.row_lst_upd_userid], 
            T.max_daily_nom_adj AS [tb_trans_factors.max_daily_nom_adj], 
            T.max_daily_qty_adj AS [tb_trans_factors.max_daily_qty_adj], 
            T.allowable_bank_adj AS [tb_trans_factors.allowable_bank_adj], 
            T.auth_tol_lvl_adj AS [tb_trans_factors.auth_tol_lvl_adj], 
            True AS _from0
        FROM PegasysContext.tb_trans_factors AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for PegasysContext.tb_trans_factors.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tb_trans_factors
        [Nominations.Data.tb_trans_factors](T1.[tb_trans_factors.contract_id], T1.[tb_trans_factors.effective_dt], T1.[tb_trans_factors.bill_recn_ind], T1.[tb_trans_factors.transitional_ind], T1.[tb_trans_factors.max_daily_qty], T1.[tb_trans_factors.nomination_cap], T1.[tb_trans_factors.standby_percentage], T1.[tb_trans_factors.standby_qty], T1.[tb_trans_factors.allowable_bank], T1.[tb_trans_factors.crit_day_bal_qty], T1.[tb_trans_factors.non_crit_day_bal_qty], T1.[tb_trans_factors.daily_storage_qty], T1.[tb_trans_factors.annual_ctr_qty], T1.[tb_trans_factors.lv_bal_svc_qty], T1.[tb_trans_factors.auth_tol_lvl], T1.[tb_trans_factors.max_daily_nom], T1.[tb_trans_factors.avg_daily_use], T1.[tb_trans_factors.daily_bal_qty], T1.[tb_trans_factors.days_of_bank], T1.[tb_trans_factors.balancing_qty], T1.[tb_trans_factors.row_lst_upd_dttm], T1.[tb_trans_factors.row_lst_upd_userid], T1.[tb_trans_factors.max_daily_nom_adj], T1.[tb_trans_factors.max_daily_qty_adj], T1.[tb_trans_factors.allowable_bank_adj], T1.[tb_trans_factors.auth_tol_lvl_adj])
    FROM (
        SELECT 
            T.contract_id AS [tb_trans_factors.contract_id], 
            T.effective_dt AS [tb_trans_factors.effective_dt], 
            T.bill_recn_ind AS [tb_trans_factors.bill_recn_ind], 
            T.transitional_ind AS [tb_trans_factors.transitional_ind], 
            T.max_daily_qty AS [tb_trans_factors.max_daily_qty], 
            T.nomination_cap AS [tb_trans_factors.nomination_cap], 
            T.standby_percentage AS [tb_trans_factors.standby_percentage], 
            T.standby_qty AS [tb_trans_factors.standby_qty], 
            T.allowable_bank AS [tb_trans_factors.allowable_bank], 
            T.crit_day_bal_qty AS [tb_trans_factors.crit_day_bal_qty], 
            T.non_crit_day_bal_qty AS [tb_trans_factors.non_crit_day_bal_qty], 
            T.daily_storage_qty AS [tb_trans_factors.daily_storage_qty], 
            T.annual_ctr_qty AS [tb_trans_factors.annual_ctr_qty], 
            T.lv_bal_svc_qty AS [tb_trans_factors.lv_bal_svc_qty], 
            T.auth_tol_lvl AS [tb_trans_factors.auth_tol_lvl], 
            T.max_daily_nom AS [tb_trans_factors.max_daily_nom], 
            T.avg_daily_use AS [tb_trans_factors.avg_daily_use], 
            T.daily_bal_qty AS [tb_trans_factors.daily_bal_qty], 
            T.days_of_bank AS [tb_trans_factors.days_of_bank], 
            T.balancing_qty AS [tb_trans_factors.balancing_qty], 
            T.row_lst_upd_dttm AS [tb_trans_factors.row_lst_upd_dttm], 
            T.row_lst_upd_userid AS [tb_trans_factors.row_lst_upd_userid], 
            T.max_daily_nom_adj AS [tb_trans_factors.max_daily_nom_adj], 
            T.max_daily_qty_adj AS [tb_trans_factors.max_daily_qty_adj], 
            T.allowable_bank_adj AS [tb_trans_factors.allowable_bank_adj], 
            T.auth_tol_lvl_adj AS [tb_trans_factors.auth_tol_lvl_adj], 
            True AS _from0
        FROM CodeFirstDatabase.tb_trans_factors AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tb_trans_type.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tb_trans_type
        [CodeFirstDatabaseSchema.tb_trans_type](T1.[tb_trans_type.contract_id], T1.[tb_trans_type.trans_type_cd], T1.[tb_trans_type.rel_start_dt], T1.[tb_trans_type.row_lst_upd_dttm], T1.[tb_trans_type.row_lst_upd_userid], T1.[tb_trans_type.rel_end_dt])
    FROM (
        SELECT 
            T.contract_id AS [tb_trans_type.contract_id], 
            T.trans_type_cd AS [tb_trans_type.trans_type_cd], 
            T.rel_start_dt AS [tb_trans_type.rel_start_dt], 
            T.row_lst_upd_dttm AS [tb_trans_type.row_lst_upd_dttm], 
            T.row_lst_upd_userid AS [tb_trans_type.row_lst_upd_userid], 
            T.rel_end_dt AS [tb_trans_type.rel_end_dt], 
            True AS _from0
        FROM PegasysContext.tb_trans_type AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for PegasysContext.tb_trans_type.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tb_trans_type
        [Nominations.Data.tb_trans_type](T1.[tb_trans_type.contract_id], T1.[tb_trans_type.trans_type_cd], T1.[tb_trans_type.rel_start_dt], T1.[tb_trans_type.row_lst_upd_dttm], T1.[tb_trans_type.row_lst_upd_userid], T1.[tb_trans_type.rel_end_dt])
    FROM (
        SELECT 
            T.contract_id AS [tb_trans_type.contract_id], 
            T.trans_type_cd AS [tb_trans_type.trans_type_cd], 
            T.rel_start_dt AS [tb_trans_type.rel_start_dt], 
            T.row_lst_upd_dttm AS [tb_trans_type.row_lst_upd_dttm], 
            T.row_lst_upd_userid AS [tb_trans_type.row_lst_upd_userid], 
            T.rel_end_dt AS [tb_trans_type.rel_end_dt], 
            True AS _from0
        FROM CodeFirstDatabase.tb_trans_type AS T
    ) AS T1");
        }
    }
}
